[{"content":"前言 我是 110-1 ~ 111-2 期間修課的。分享一下在交大資工所修課的心得。依順序分享\n演算法 課程 110-1 譚健民 教授 評分：期中考 (50%), 期末考 (50%) 成績： A+ 上課： 挑楓葉本挑幾個章節出來上 心得： 其實老師教得很清楚，證明都非常詳細，DP 的部分還不錯。 不過我是本科生，大部分都學過了。其實有點後悔修這堂課，應該去修一些更有用的課程。 老師好像要退休了，聽說最後一次開課。 很涼，很甜。 影像處理： 英授課程 110-1 王才沛 教授 評分：A 作業： hw1: 實作一些基本功能 (不能用 opencv) hw2: edge detection (不能用 opencv) hw3: 期末報告 六人一組報告一個影像處理上的主題 期中期末： 會考一些計算題，申論題。 心得： 建議能適應老師的英文再上。不過我當初是很想學影像相關的東西，所以決定繼續修。 我到現在還是搞不懂作業評分標準，hw1 很認真寫但很低分，hw2 大蓋寫一寫結果很高分。 我期中期末都考沒很好，但是最後有調分。 涼度中間，甜度中間。 新創雲端開發工具 課程 110-1 陳添福 教授 成績：A+ 作業：(以組為單位繳交） lab*5 final project 心得： 可以聽到一堆創業家的故事，然後 Sifive 有來演講，拿到了一件公司 T-shirt。其實，我對新創公司並不排斥，聽一聽也對新創或創業有更多的認識。 final project 要做一個類似創業的產品出來，還要寫一些創業報告等等東西。 高等Unix程式設計 課程 110-2 黃俊穎 教授 成績：A+ 作業 lab1: lsof lab2: library injection lab3: assembly signal lab4: debuger assembly: 加分用 https://github.com/davidzwei/Advanced-Unix-NCTU 考試： 期中：用 ctf 方式考了 11 還 13 題。 心得： 我覺得老師教得很好，會當場 trace code。 學到很多 unix 底層的操作 ，一些 file system, function call, assembly 。 期中考好難喔，我到現在可能也寫不出來。 軟體測試 課程 110-2 黃世昆 教授 A+ 作業 https://github.com/a4865g/NYCU-Software-Testing-2022 Lab x8 Homework x4 Final Project: 三人一組，找一個專案做 testing 發 PR (加分用) 我的：https://github.com/davidzwei/Software-Testing-NCTU 心得 我還滿喜歡這堂課的，學到一堆測試的工具和技巧，在工作上也有使用到。 雖然作業滿多的，大概每週會有一項，不過大多很快就能完成，負擔不會到很大。 有些觀念我當時學玩還是沒什麼感覺，現在上班後回來看覺得很有用。 我只有一個 lab 遲交，其他全部都有準時交，且滿分。 嵌入式即時系統 課程 110-2 張立平 A 作業 lab1: Periodic Task Emulation lab2: EDF Scheduler lab3: Ceiling Priority Protocol 考試 小考 *2 期中 期末 心得： 可以學到一些排程上的演算法。 老師講解的很清楚，不過我好像沒有什麼嵌入式系統的天份，我真的不想再碰嵌入式系統的東西了。 數值軟體開發 英授課程 111-1 yungyuc (yyc) A 作業 https://github.com/yungyuc/nsdhw_22au hw * 6 要發 PR 我的：https://github.com/davidzwei/nsdhw_22au proposal final project: 找一個數值運算相關的題目，用 cpp 寫，然後用 pybind 包成 python library 期中考： 全部都是課程網頁上的東西，都是大學學過的東西，記得看熟 c++, python data type 浮點數轉換 cache hit/ miss 心得 我還滿喜歡這堂課的，老師的上課網站非常豐富，英文也是我上過英語授課最好的課。因為老師在新思上班，有時候還能聽到一些業界的故事。 老師的 課程網頁 相當有幫助 。 學到 Ｍodern cpp, Pybind, Git, Pull request(第一次 PR 就貢獻在這堂課了) 這堂課最困難的是就是早上七點開始上課，冬天真的起不來啊。 平時解題都用 c++ ，基本 std 都會用。但修完這堂課，發現自己寫的 c++ 有夠醜的，modern cpp 需要再好好加強。 課程所學的技能在工作上也非常有幫助。 平行程式設計 課程 111-1 yyp 教授 A+ 作業 hw * 6 hw1: SIMD hw2: Pthread hw3: OpenMP hw4: MPI hw5: CUDA hw6: OpenCL 我的：https://github.com/davidzwei/Parallel-Programming-NCTU Final project 三人一組找一個專案去平行化 需要用 latex 寫報告 心得： 上課講解非常清楚，內容相當豐富。 作業分數除了正確性還要比速度，需要和第一名去比。 上課所學在工作上也有用到。 基礎程式設計 課程：考 gpe 評分: 2.4/6 題 成績: Pass 心得: 練習個大概二三十題考古去考就過了 我有寫的：https://github.com/davidzwei/LeetCode-Solutions 輸入、輸出的部分要自己處理比較麻煩一點，需要特別注意。 寫完題目可以去 online judge 對答案 。 資訊科技產業專案設計 課程 112-1 (成大資工所課程) Jserv 老師 https://hackmd.io/@sysprog/info2023/https%3A%2F%2Fhackmd.io%2F%40sysprog%2FS11ooE4Rh 作業： hw1: hw2: hw3: hw4: 心得 我只上到一半，後來開始上班就沒有跟課了。但是我前三份作業我都有交，可以從作業中看到自己有哪些不足。 課程網頁的資料相當豐富齊全，我幾乎都有看完，有些還看兩遍。 最後有拿到三份 offer ，課程非常有幫助。 總結 最近已經上工一陣子了，軟體測試、數值軟體、平行程式設計在工作上滿常用到的，私心推薦可以去上。後悔沒有去修網路程式設計。\n","date":"2024-03-03T15:13:12+08:00","permalink":"https://davidzwei.github.io/p/%E4%BA%A4%E5%A4%A7%E8%B3%87%E5%B7%A5%E6%89%80%E4%BF%AE%E8%AA%B2%E5%BF%83%E5%BE%97/","title":"交大資工所修課心得"},{"content":"Hugo Basics 安裝\nlinux:\n1 sudo snap install hugo mac:\n1 brew install hugo 檢查 hugo 版本\n1 hugo version 建立一個 hugo repo\n1 hugo new website \u0026#34;your_blog\u0026#34; 初始化專案\n1 2 cd your_blog/ git init 加入喜歡的主題，從 https://themes.gohugo.io/ 去選一個\n1 git submodule add \u0026#34;theme-url\u0026#34; themes/\u0026#34;theme\u0026#34; E.g. hugo-stack\n1 git submodule add \u0026#34;~/\u0026#34; themes/hugo-stack Setting 路徑下會有 config.yml 或 config.toml ，加入 theme ，以及你想要網頁要放的 網址。\n其他，就直接複製 themes/ 下的 config.yml 或 config.toml 的內容。\n看個人需求，自己修改內容。\n需要修改 baseurl, theme\nbaseurl: 你即將要部署你的網站到哪個網址 theme: 你的主題 config.toml\n1 2 3 4 # config.yaml baseurl: your-website-url languageCode: en-us theme: your-theme E.g.\n1 2 3 4 # config.yaml baseurl: https://davidzwei.github.io/ languageCode: en-us theme: hugo-theme-stack TODO:\n等我有空再來寫一篇關於 hugo-theme-stack 如何客製化。\nBuild 編譯到 static website\n路徑會在 /public\n編譯在本地 server\n1 hugo server 把 草稿的文章也編譯出來\n1 hugo server -D 網站會暫時部署在本地這個網址下 http://localhost:1313/\n可以到此網址下檢查一下\n直接生成，不顯示在 local server\n(要 deploy 前，記得要直接下此指令)\n1 hugo Deploy 我是部署到個人 github.io 主頁 ，也有人會用自己花錢申請 domain ，或是用 netilfy。不過，我是免費仔，然後覺得用 netilify 結尾的網站不美觀，所以決定部署在 github 主頁。\n我是用兩個 github repo 來管理專案:\n一個放目前這個 hugo 專案，也可以當作備份，可以隨時切換桌機或筆電來寫文章。 我把設 private 另一個是 github 主頁的 repo (user-name/github.io) ，用來放編譯出來的靜態網頁。 設 public 先用 submodule 來管理編譯出來的網頁，將目前路徑下的 /public 連結到遠端 [github.io](http://github.io) repo。\n1 git submodule add \u0026#34;https://user-name/github.io\u0026#34; /public 接著， compile ，在 /public 下產生靜態網頁檔案。\n1 hugo 最後，進到 /public ，確認遠端 repo 正確，就可以推了\n1 cd public/ 確認遠端 repo 是否正確\n1 git remote -v commit, push\n1 2 3 git add . git commit \u0026#34;My first blog\u0026#34; git push origin main References hugo document: https://gohugo.io/documentation/ hugo themes: https://themes.gohugo.io/ ","date":"2024-01-03T20:13:04+08:00","permalink":"https://davidzwei.github.io/p/hugo/","title":"Hugo"},{"content":"Hello! This is my first blog!\n1 2 3 int main(){ std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\\n\u0026#34;; } ","date":"2023-08-29T16:58:32+08:00","permalink":"https://davidzwei.github.io/p/hello/","title":"Hello"}]